# -*- coding: utf-8 -*-
"""DataVisualization-plt.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XKBGszLRU_AghEZ9zpR-uYtr3NFwVdZ5

**Matplotlib**

Most popular ploting library for Python.

It gives you control over every aspect of a figure.

Official Website : https://matplotlib.org/
"""

# Commented out IPython magic to ensure Python compatibility.
import matplotlib.pyplot as plt
# When using the 'inline' backend, your matplotlib graphs will be included in your notebook, next to the code.
# %matplotlib inline

import numpy as np
x = np.linspace(0, 5, 10)
y = x ** 2
y

""" **Functional Method**"""

plt.plot(x, y, 'r*')
plt.xlabel('X Label')
plt.ylabel('Y Label')
plt.title('Title')

# number of rows, number of columns, plot number you're refering 
plt.subplot(1, 2, 1)
plt.plot(x,y, 'g')

plt.subplot(1, 2, 2)
plt.plot(x ** 2, y, 'b')

"""**OOP Method**"""

fig = plt.figure()

axes = fig.add_axes([0.1, 0.1, 0.8, 0.8])
axes.plot(x, y)
axes.set_xlabel('X label')
axes.set_ylabel('Y label')
axes.set_title('Title')

fig = plt.figure()
# all the values should between 0 and 1 (x0-y0-height and width)
ax1 = fig.add_axes([0.1, 0.1, 0.8, 0.8])
ax1.plot(x, y)
ax2 = fig.add_axes([0.2, 0.5, 0.4, 0.3])
ax2.plot(y, x)
# ax3 = fig.add_axes([0.3, 0.3, 1, 0.1])
# ax3.plot(x, y)

fig, axes = plt.subplots(nrows=1, ncols=2)
plt.tight_layout()
axes[0].plot(x, y)
axes[0].set_title('AXES0')

axes[1].plot(y, x)
axes[1].set_title('AXES1')

# figsize=(width, height) 
fig = plt.figure(figsize=(4, 5))

ax = fig.add_axes([0, 0, 1, 1])
ax.plot(x, y)

fig = plt.figure(figsize=(4, 5))
ax = fig.add_axes([0, 0, 1, 1])

ax.plot(x, y, label='x-y')
ax.plot(y, x, label='y-x')
# we also can use tuple for location (x, y)
ax.legend(loc=0)

# dpi: dots per inch. It represents the number of pixels per inch in the figure.
fig.savefig('my_fig.png', dpi=200)

"""**Plot appearance**"""

fig = plt.figure()

axes = fig.add_axes([0, 0, 1, 1])
# alpha is for the opacity of the line
# lw : linewidth, ls : linestyle
axes.plot(x, y, color='#E74E07', lw=2.5, alpha=0.5, ls='-', marker='o', markersize=15, markerfacecolor='purple', markeredgewidth=3, markeredgecolor='green')

fig = plt.figure()

axes = fig.add_axes([0, 0, 1, 1])
# alpha is for the opacity of the line
# lw : linewidth, ls : linestyle
axes.plot(x, y, color='#E74E07', lw=2, ls='--')
# lower bound - upper bound 
axes.set_xlim([0, 1])
axes.set_ylim([0, 2])

"""**Exercises**"""

import numpy as np

x = np.arange(0, 100)
y = x * 2
z = x ** 2

# Commented out IPython magic to ensure Python compatibility.
import matplotlib.pyplot as plt
# %matplotlib inline

'''
EX 1
Create a figure object called fig
add an axis to figure canvas at [0, 0, 1, 1]
plot(x, y)
'''

fig = plt.figure()
axes = fig.add_axes([0, 0, 1, 1])
axes.plot(x, y)
axes.set_xlabel('X')
axes.set_ylabel('Y')
axes.set_title('Title')

'''
EX 2
Create a figure object and put two axes on it located at [0, 0, 1, 1] and [0.2, 0.5, .2, .2]
plot(x, y) on both axes 
'''
fig = plt.figure()
ax1 = fig.add_axes([0, 0, 1, 1])
ax1.plot(x, y, 'r')
ax1.set_xlabel('x')
ax1.set_ylabel('y')

ax2 = fig.add_axes([0.2, .5, .2, .2])
ax2.plot(x, y, 'r')
ax2.set_xlabel('x')
ax2.set_ylabel('y')

'''
EX 3
Create the plot below by adding two axes to a figure object at [0, 0, 1, 1] and [0.2, 0.5, .4, .4]
'''
fig = plt.figure()
ax1 = fig.add_axes([0, 0, 1, 1])
ax1.plot(x, z)
ax1.plot(x, x)
ax1.set_xlabel('x')
ax1.set_ylabel('y')

ax2 = fig.add_axes([0.2, 0.5, .4, .4])
ax2.plot(x, y)
ax2.set_xlabel('x')
ax2.set_ylabel('y')
ax2.set_title('zoom')

'''
EX 4 
create a subplot row = 1 - col = 2
plot x,y and x,z on the axes - play around with the lw and style
add figsize
'''
fig = plt.figure(figsize=(10, 5))
axes = fig.subplots(nrows=1, ncols=2)
axes[0].plot(x, y, 'b--', lw=5)
axes[1].plot(x, z, 'r')
plt.tight_layout()

