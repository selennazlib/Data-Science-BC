# -*- coding: utf-8 -*-
"""bc-exercises.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ADdqFD8Bm7Nx80JmTeMHXDmAl6Lm_JUw
"""

import pandas as pd
data = pd.read_csv('Salaries.csv')
# Read Salaries.csv as a dataframe called sal
sal = pd.DataFrame(data)
# Check the head of the DataFrame
sal.head()

# Use the .info() method to find out how many entries there are
sal.info()

# What is the average BasePay ?
sal['BasePay'].mean()

# What is the highest amount of OvertimePay in the dataset ?
sal['OvertimePay'].max()

#  What is the job title of  JOSEPH DRISCOLL ? Note: Use all caps, otherwise you may get an answer that doesn't match up (there is also a lowercase Joseph Driscoll)
sal[sal['EmployeeName'] == 'JOSEPH DRISCOLL']['JobTitle']

# How much does JOSEPH DRISCOLL make (including benefits)?
sal[sal['EmployeeName'] == 'JOSEPH DRISCOLL']['TotalPayBenefits']

# What is the name of highest paid person (including benefits)?
sal[sal['TotalPayBenefits'] == (sal['TotalPayBenefits'].max())]['EmployeeName']

# What is the name of lowest paid person (including benefits)? 
sal[sal['TotalPayBenefits'] == (sal['TotalPayBenefits'].min())]['EmployeeName']

"""
ALTERNATIVE
sal.iloc[sal['TotatlPayBenefits].argmin()]
"""

# What was the average (mean) BasePay of all employees per year? (2011-2014) ?
sal.groupby('Year').mean()['BasePay']

# How many unique job titles are there?
sal['JobTitle'].nunique()

# What are the top 5 most common jobs?
sal.value_counts('JobTitle').head(5)

# How many Job Titles were represented by only one person in 2013? (e.g. Job Titles with only one occurence in 2013?)
# ANSWER
sum(sal[sal['Year'] == 2013]['JobTitle'].value_counts() == 1)

# How many people have the word Chief in their job title? 
# ANSWER
def chief_string(title):
  if 'chief' in title.lower().split():
    return True
  else:
    return False

sum(sal['JobTitle'].apply(lambda x: chief_string(x)))

# Is there a correlation between length of the Job Title string and Salary?
sal = sal[sal['JobTitle'] != 'Not provided']
sal['Len of String'] = sal['JobTitle'].str.len()
sal['Len of String'].corr(sal['TotalPayBenefits'])